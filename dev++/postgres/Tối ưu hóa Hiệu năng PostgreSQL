# üìà T·ªëi ∆Øu H√≥a Hi·ªáu NƒÉng PostgreSQL

## M·ª•c l·ª•c

- [Gi·ªõi thi·ªáu](#gi·ªõi-thi·ªáu)
- [Nguy√™n t·∫Øc c·ªët l√µi](#nguy√™n-t·∫Øc-c·ªët-l√µi)
- [1. C·∫•u h√¨nh PostgreSQL t·ªëi ∆∞u](#1-c·∫•u-h√¨nh-postgresql-t·ªëi-∆∞u)
- [2. T·ªëi ∆∞u h√≥a truy v·∫•n SQL](#2-t·ªëi-∆∞u-h√≥a-truy-v·∫•n-sql)
- [3. T·ªëi ∆∞u h√≥a ch·ªâ m·ª•c (Index)](#3-t·ªëi-∆∞u-h√≥a-ch·ªâ-m·ª•c-index)
- [4. Qu·∫£n l√Ω autovacuum v√† ph√¢n m·∫£nh](#4-qu·∫£n-l√Ω-autovacuum-v√†-ph√¢n-m·∫£nh)
- [5. Gi√°m s√°t v√† ƒëo hi·ªáu nƒÉng](#5-gi√°m-s√°t-v√†-ƒëo-hi·ªáu-nƒÉng)
- [6. Caching v√† Connection Pooling](#6-caching-v√†-connection-pooling)
- [7. Chi·∫øn l∆∞·ª£c m·ªü r·ªông quy m√¥](#7-chi·∫øn-l∆∞·ª£c-m·ªü-r·ªông-quy-m√¥)
- [8. C√¥ng c·ª• h·ªó tr·ª£ t·ªëi ∆∞u h√≥a](#8-c√¥ng-c·ª•-h·ªó-tr·ª£-t·ªëi-∆∞u-h√≥a)
- [T√†i nguy√™n tham kh·∫£o](#t√†i-nguy√™n-tham-kh·∫£o)

---

## Gi·ªõi thi·ªáu

T·ªëi ∆∞u h√≥a hi·ªáu nƒÉng PostgreSQL l√† qu√° tr√¨nh c·∫£i thi·ªán t·ªëc ƒë·ªô v√† ƒë·ªô ·ªïn ƒë·ªãnh c·ªßa h·ªá qu·∫£n tr·ªã c∆° s·ªü d·ªØ li·ªáu, t·ª´ c·∫•u h√¨nh h·ªá th·ªëng ƒë·∫øn thi·∫øt k·∫ø truy v·∫•n. M·ª•c ti√™u l√† ƒë·∫£m b·∫£o ·ª©ng d·ª•ng ho·∫°t ƒë·ªông nhanh, ti·∫øt ki·ªám t√†i nguy√™n v√† m·ªü r·ªông t·ªët.

---

## Nguy√™n t·∫Øc c·ªët l√µi

- Thi·∫øt k·∫ø c∆° s·ªü d·ªØ li·ªáu h·ª£p l√Ω
- Gi·∫£m chi ph√≠ truy v·∫•n
- Tr√°nh overfetching v√† underfetching
- Gi√°m s√°t th∆∞·ªùng xuy√™n
- C√¢n b·∫±ng t·∫£i truy c·∫≠p v√† t√†i nguy√™n h·ªá th·ªëng

---

## 1. C·∫•u h√¨nh PostgreSQL t·ªëi ∆∞u

**T·∫≠p tin c·∫ßn ch·ªânh: `postgresql.conf`**

### C√°c th√¥ng s·ªë quan tr·ªçng:

- `shared_buffers`: ~25-40% RAM
- `work_mem`: 4MB‚Äì64MB t√πy kh·ªëi l∆∞·ª£ng truy v·∫•n
- `maintenance_work_mem`: 64MB‚Äì1GB (cho VACUUM/CREATE INDEX)
- `effective_cache_size`: 60‚Äì80% RAM (∆∞·ªõc l∆∞·ª£ng cache OS)
- `wal_buffers`: 16MB ho·∫∑c `-1` ƒë·ªÉ t·ª± ƒë·ªông
- `checkpoint_completion_target`: 0.7‚Äì0.9
- `max_connections`: Gi·ªõi h·∫°n k·∫øt n·ªëi ƒë·ªÉ tr√°nh RAM c·∫°n
- `random_page_cost`: Gi·∫£m xu·ªëng 1.0 n·∫øu SSD

---

## 2. T·ªëi ∆∞u h√≥a truy v·∫•n SQL

- S·ª≠ d·ª•ng `EXPLAIN (ANALYZE, BUFFERS)` ƒë·ªÉ hi·ªÉu chi ph√≠ truy v·∫•n
- Tr√°nh SELECT * ‚Äì ch·ªâ ch·ªçn c·ªôt c·∫ßn thi·∫øt
- D√πng `LIMIT`, `OFFSET` hi·ªáu qu·∫£
- Tr√°nh `OR`, thay b·∫±ng `UNION ALL` khi h·ª£p l√Ω
- D√πng CTE (`WITH`) c·∫©n th·∫≠n ‚Äì c√≥ th·ªÉ g√¢y v·∫≠t li·ªáu h√≥a kh√¥ng mong mu·ªën
- ƒê·∫£m b·∫£o JOIN c√≥ ch·ªâ m·ª•c ph√π h·ª£p
- Tr√°nh truy v·∫•n con kh√¥ng t∆∞∆°ng quan l·ªìng s√¢u

---

## 3. T·ªëi ∆∞u h√≥a ch·ªâ m·ª•c (Index)

- **Lo·∫°i ch·ªâ m·ª•c ph·ªï bi·∫øn:**
  - `btree`: m·∫∑c ƒë·ªãnh
  - `hash`: cho ph√©p so s√°nh b·∫±ng `=`
  - `GIN`, `GiST`: t√¨m ki·∫øm full-text, array
  - `BRIN`: d·ªØ li·ªáu r·∫•t l·ªõn, d·∫°ng tu·∫ßn t·ª±

- **Chi·∫øn l∆∞·ª£c:**
  - T·∫°o ch·ªâ m·ª•c tr√™n c·ªôt WHERE, JOIN, ORDER BY
  - D√πng `partial index` n·∫øu truy v·∫•n c√≥ ƒëi·ªÅu ki·ªán c·ª• th·ªÉ
  - Tr√°nh t·∫°o ch·ªâ m·ª•c d∆∞ th·ª´a (t·ªën RAM v√† th·ªùi gian c·∫≠p nh·∫≠t)
  - D√πng `covering index` n·∫øu ch·ªâ ƒë·ªçc v√†i c·ªôt

---

## 4. Qu·∫£n l√Ω autovacuum v√† ph√¢n m·∫£nh

- PostgreSQL kh√¥ng x√≥a b·∫£n ghi ngay ‚Äì d√πng VACUUM
- C·∫•u h√¨nh `autovacuum` h·ª£p l√Ω:
  - `autovacuum_vacuum_cost_limit`
  - `autovacuum_naptime`
  - `autovacuum_vacuum_threshold`

- D√πng `pg_stat_user_tables` ƒë·ªÉ theo d√µi dead tuples
- D√πng `VACUUM (VERBOSE)` ho·∫∑c `VACUUM FULL` (blocking)

---

## 5. Gi√°m s√°t v√† ƒëo hi·ªáu nƒÉng

### C√¥ng c·ª• t√≠ch h·ª£p:

- `pg_stat_statements`: th·ªëng k√™ truy v·∫•n ch·∫≠m
- `pg_stat_activity`: xem truy v·∫•n ƒëang ch·∫°y
- `pg_stat_bgwriter`: hi·ªáu nƒÉng ghi WAL

### Gi·∫£i ph√°p APM:

- [pgBadger](https://github.com/dalibo/pgbadger) ‚Äì ph√¢n t√≠ch log
- [Prometheus + Grafana](https://github.com/prometheus-community/postgres_exporter)
- [pganalyze](https://pganalyze.com/)

---

## 6. Caching v√† Connection Pooling

### Caching:

- ·ª®ng d·ª•ng: Redis, Memcached
- Materialized views n·∫øu d·ªØ li·ªáu kh√¥ng thay ƒë·ªïi li√™n t·ª•c

### Connection Pooling:

- **PgBouncer** ‚Äì nh·∫π, ph·ªï bi·∫øn
- **Pgpool-II** ‚Äì h·ªó tr·ª£ load balancing, failover

---

## 7. Chi·∫øn l∆∞·ª£c m·ªü r·ªông quy m√¥

- **Vertical scaling**: n√¢ng RAM/CPU
- **Read replicas**: nh√¢n b·∫£n ƒë·ªÉ ƒë·ªçc
- **Partitioning (Table Sharding)**:
  - Range, List, Hash partition
- Logical replication: t√°ch workload theo d·ªãch v·ª•

---

## 8. C√¥ng c·ª• h·ªó tr·ª£ t·ªëi ∆∞u h√≥a

- `EXPLAIN`, `ANALYZE` ‚Äì ph√¢n t√≠ch truy v·∫•n
- `auto_explain` ‚Äì ghi truy v·∫•n ch·∫≠m t·ª± ƒë·ªông
- `pg_hint_plan` ‚Äì th√™m g·ª£i √Ω cho planner
- `pg_repack` ‚Äì ch·ªëng ph√¢n m·∫£nh m√† kh√¥ng lock
- `hypopg` ‚Äì gi·∫£ l·∫≠p ch·ªâ m·ª•c ƒë·ªÉ test hi·ªáu nƒÉng

---

## T√†i nguy√™n tham kh·∫£o

- [PostgreSQL Performance Tuning Documentation](https://www.postgresql.org/docs/current/performance-tips.html)
- [Use The Index, Luke](https://use-the-index-luke.com/)
- [PGTune ‚Äì Online Config Generator](https://pgtune.leopard.in.ua/)
- [Postgres Wiki - Performance](https://wiki.postgresql.org/wiki/Performance_Optimization)
- [pg_stat_statements Documentation](https://www.postgresql.org/docs/current/pgstatstatements.html)

---

‚úÖ **Khuy·∫øn ngh·ªã**: Ki·ªÉm th·ª≠ t·ª´ng thay ƒë·ªïi tr√™n m√¥i tr∆∞·ªùng staging tr∆∞·ªõc khi √°p d·ª•ng v√†o production ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n v√† hi·ªáu qu·∫£.
